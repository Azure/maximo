{
    "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion" : "1.0.0.0",
    "parameters" : {
      "baseName" : {
        "type" : "string",
        "minLength" : 1,
        "metadata" : {
          "description" : "Base name to be used in resource names (usually the cluster's Infra ID)"
        }
      },
      "vnetBaseName": {
        "type": "string",
        "defaultValue": "",
        "metadata" : {
          "description" : "The specific customer vnet's base name (optional)"
        }
      },
      "bootstrapIgnition" : {
        "type" : "string",
        "minLength" : 1,
        "metadata" : {
          "description" : "Bootstrap ignition content for the bootstrap cluster"
        }
      },
      "vnetBaseResourceGroupName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The specific resource group for the vnet's base name (optional)"
            }
        },
        "controlSubnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the master subnet"
            }
        },
        "identityName": {
            "type": "string",
            "defaultValue" : "ClusterIdentity",
            "metadata": {
                "description": "The name of managed identity"
            }
        },
      "sshKeyData" : {
        "type" : "securestring",
        "defaultValue" : "Unused",
        "metadata" : {
          "description" : "Unused"
        }
      },
      "bootstrapVMSize" : {
        "type" : "string",
        "defaultValue" : "Standard_D4s_v3",
        "metadata" : {
          "description" : "The size of the Bootstrap Virtual Machine"
        }
      }
    },
    "variables" : {
      "location" : "[resourceGroup().location]",
      "virtualNetworkName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')))]",
      "virtualNetworkID" : "[resourceId(parameters('vnetBaseResourceGroupName'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
      "masterSubnetName": "[parameters('controlSubnetName')]",
      "masterSubnetRef" : "[concat(variables('virtualNetworkID'), '/subnets/', variables('masterSubnetName'))]",
      "internalLoadBalancerName" : "[concat(parameters('baseName'), '-internal')]",
      "sshKeyPath" : "/home/core/.ssh/authorized_keys",
      "identityName" : "[parameters('identityName')]",
      "vmName" : "[concat(parameters('baseName'), '-bootstrap')]",
      "nicName" : "[concat(variables('vmName'), '-nic')]",
      "imageName" : "[concat(parameters('baseName'), '-image')]",
      "clusterNsgName" : "[concat(if(not(empty(parameters('vnetBaseName'))), parameters('vnetBaseName'), parameters('baseName')), '-nsg')]"
    },
    "resources" : [
      {
        "apiVersion" : "2018-06-01",
        "type" : "Microsoft.Network/networkInterfaces",
        "name" : "[variables('nicName')]",
        "location" : "[variables('location')]",
        "dependsOn" : [
        ],
        "properties" : {
          "ipConfigurations" : [
            {
              "name" : "pipConfig",
              "properties" : {
                "privateIPAllocationMethod" : "Dynamic",
                "subnet" : {
                  "id" : "[variables('masterSubnetRef')]"
                },
                "loadBalancerBackendAddressPools" : [
                  {
                    "id" : "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'), '/backendAddressPools/internal-backend')]"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "apiVersion" : "2018-06-01",
        "type" : "Microsoft.Compute/virtualMachines",
        "name" : "[variables('vmName')]",
        "location" : "[variables('location')]",
        "identity" : {
          "type" : "userAssigned",
          "userAssignedIdentities" : {
            "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]" : {}
          }
        },
        "dependsOn" : [
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties" : {
          "hardwareProfile" : {
            "vmSize" : "[parameters('bootstrapVMSize')]"
          },
          "osProfile" : {
            "computerName" : "[variables('vmName')]",
            "adminUsername" : "core",
            "adminPassword" : "NotActuallyApplied!",
            "customData" : "[parameters('bootstrapIgnition')]",
            "linuxConfiguration" : {
              "disablePasswordAuthentication" : false
            }
          },
          "storageProfile" : {
            "imageReference": {
              "id": "[resourceId('Microsoft.Compute/images', variables('imageName'))]"
            },
            "osDisk" : {
              "name": "[concat(variables('vmName'),'_OSDisk')]",
              "osType" : "Linux",
              "createOption" : "FromImage",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "diskSizeGB" : 100
            }
          },
          "networkProfile" : {
            "networkInterfaces" : [
              {
                "id" : "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
              }
            ]
          }
        }
      },
      {
      "type" : "Microsoft.Network/networkSecurityGroups",
      "name" : "[variables('clusterNsgName')]",
      "apiVersion" : "2018-10-01",
      "location" : "[variables('location')]",
      "properties" : {
        "securityRules" : [
          {
            "name" : "apiserver_in",
            "properties" : {
              "protocol" : "Tcp",
              "sourcePortRange" : "*",
              "destinationPortRange" : "6443",
              "sourceAddressPrefix" : "*",
              "destinationAddressPrefix" : "*",
              "access" : "Allow",
              "priority" : 101,
              "direction" : "Inbound"
            }
          }
        ]
      }
    }
    ]
  }